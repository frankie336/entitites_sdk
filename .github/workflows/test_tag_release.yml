name: Test, Tag, and Publish

on:
  push:
    branches:
      - '**'  # Run on all branches

permissions:
  contents: write
  id-token: write

env:
  # Set the correct TestPyPI URL here
  TEST_PYPI_URL: https://test.pypi.org/simple/
  PROD_PYPI_URL: https://upload.pypi.org/legacy/ # Keep legacy for upload or update if preferred
  # Add your new BASE_URL variable
  BASE_URL: http://localhost:9000/

jobs:
  test:
    name: ✅ Test on Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - name: 🧾 Checkout repository
        uses: actions/checkout@v4

      - name: 🐍 Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: 📦 Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-
            ${{ runner.os }}-pip-

      - name: 🔧 Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          # Reverted: Now uses the corrected env.TEST_PYPI_URL from the top env block
          pip install --extra-index-url ${{ env.TEST_PYPI_URL }} -e ".[dev]"

      - name: ✅ Run tests
        # Your tests can now potentially use BASE_URL if needed, e.g.:
        # env:
        #   API_BASE_URL: ${{ env.BASE_URL }}
        run: pytest tests/

  release:
    name: 🚀 Tag, Build, and Publish
    runs-on: ubuntu-latest
    needs: test
    if: github.ref_type == 'branch' # Only for branch pushes

    steps:
      - name: 🧾 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: 🔧 Install build and dev tools
        run: |
          python -m pip install --upgrade pip setuptools wheel build
          # This already used the env var and will now use the corrected URL
          pip install --extra-index-url ${{ env.TEST_PYPI_URL }} -e ".[dev]"

      - name: 🚀 Setup Node.js for semantic-release
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: 🔧 Install semantic-release
        run: |
          npm install -g semantic-release \
            @semantic-release/git \
            @semantic-release/changelog \
            @semantic-release/github \
            @semantic-release/exec \
            conventional-changelog-conventionalcommits

      - name: 🔢 Run semantic-release (tag, changelog, version bump)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

      - name: 🏗️ Build Python package
        run: python -m build

      - name: 🛡️ Verify build artifacts
        run: |
          ls -lh dist
          test -n "$(ls -A dist 2>/dev/null)" || (echo "❌ dist/ directory is empty!" ; exit 1)

      - name: 🧠 Decide publish target
        id: repo
        run: |
          BRANCH="${GITHUB_REF##*/}"
          if [[ "$BRANCH" == "main" || "$BRANCH" == "master" ]]; then
            echo "repo=${{ env.PROD_PYPI_URL }}" >> $GITHUB_OUTPUT
          else
            # This already used the env var and will now use the corrected URL
            echo "repo=${{ env.TEST_PYPI_URL }}" >> $GITHUB_OUTPUT
          fi

      - name: 📦 Publish to PyPI or Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: ${{ steps.repo.outputs.repo }}
          skip-existing: true