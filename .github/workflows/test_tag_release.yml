name: Test, Tag, and Publish

on:
  push:
    branches:
      - main
      - master

permissions:
  contents: write # Needed for semantic-release to push tags/releases
  id-token: write # Needed for OIDC Trusted Publishing to PyPI

jobs:
  test:
    name: ✅ Test on Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - name: 🧾 Checkout repository
        uses: actions/checkout@v4

      - name: 🐍 Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: 📦 Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          # Use a simpler key if requirements.txt isn't used or doesn't change often with pyproject.toml
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-
            ${{ runner.os }}-pip-

      - name: 🔧 Install dependencies including dev
        run: |
          python -m pip install --upgrade pip setuptools wheel
          # Install the package itself in editable mode along with dev dependencies
          pip install --extra-index-url https://test.pypi.org/simple/ -e ".[dev]"

      - name: ✅ Run tests
        run: pytest tests/

  release:
    name: 🚀 Tag, Build, and Publish
    runs-on: ubuntu-latest
    needs: test # Run only if all test jobs succeed

    # Optional: Condition to run only on main/master pushes
    # if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
      - name: 🧾 Checkout repository
        uses: actions/checkout@v4
        with:
          # Fetch all history and tags for semantic-release
          fetch-depth: 0

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          # Use a specific Python version consistent for building/publishing
          python-version: '3.11'

      - name: 🔧 Install build and dev tools
        run: |
          python -m pip install --upgrade pip setuptools wheel build
          # Install project with dev deps needed for semantic-release hooks or local testing
          pip install --extra-index-url https://test.pypi.org/simple/ -e ".[dev]"

      - name: 🚀 Setup Node.js for semantic-release
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: 🔧 Install semantic-release and plugins
        run: |
          # Add @semantic-release/exec here
          npm install -g semantic-release \
            @semantic-release/git \
            @semantic-release/changelog \
            @semantic-release/github \
            @semantic-release/exec \
            conventional-changelog-conventionalcommits

      - name: 🔢 Run semantic-release (tag, changelog, version bump)
        env:
          # GITHUB_TOKEN is automatically available to semantic-release/github
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

      - name: 🏗️ Build Python package
        # This runs after semantic-release, potentially picking up patched version numbers
        run: python -m build

      - name: 🛡️ Verify build artifacts
        run: |
          echo "--- Contents of dist/ ---"
          ls -lh dist
          # Ensure the dist directory is not empty
          test -n "$(ls -A dist 2>/dev/null)" || (echo "❌ dist/ directory is empty or missing!" ; exit 1)
          echo "✅ Build artifacts verified."

      - name: 📦 Publish to Test PyPI (Trusted Publisher)
        # Only publish if the semantic-release step was successful (implied by job progression)
        # Optional: Add condition like `if: startsWith(github.ref, 'refs/tags/')` if semantic-release only creates tags
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true
          # No credentials needed due to Trusted Publishing setup